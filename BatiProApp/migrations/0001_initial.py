# Generated by Django 5.1.2 on 2024-11-23 01:40

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Categorie',
            fields=[
                ('id_categorie', models.AutoField(primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Commande',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_commande', models.DateField(auto_now_add=True)),
                ('statut', models.CharField(default='en attente', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Metier',
            fields=[
                ('id_metier', models.AutoField(primary_key=True, serialize=False)),
                ('nom_metier', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Panier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('telephone', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'clients',
            },
            bases=('BatiProApp.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='MarketOwner',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to=settings.AUTH_USER_MODEL)),
                ('id_marketowner', models.AutoField(primary_key=True, serialize=False)),
                ('telephone', models.CharField(max_length=20)),
                ('adresse', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'marketowners',
            },
            bases=('BatiProApp.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Livraison',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_estime', models.DateField()),
                ('methode_livraison', models.CharField(max_length=20)),
                ('adresse_livraison', models.CharField(max_length=100)),
                ('frais_livraison', models.DecimalField(decimal_places=2, max_digits=10)),
                ('statut', models.CharField(default='en pr√©paration', max_length=50)),
                ('commande', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='livraison', to='BatiProApp.commande')),
            ],
        ),
        migrations.CreateModel(
            name='Marketplace',
            fields=[
                ('id_marketplace', models.AutoField(primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('localisation', models.CharField(max_length=255)),
                ('note', models.DecimalField(decimal_places=1, max_digits=2)),
                ('categories', models.ManyToManyField(related_name='marketplaces', to='BatiProApp.categorie')),
                ('owners', models.ManyToManyField(related_name='marketplaces', to='BatiProApp.marketowner')),
            ],
        ),
        migrations.CreateModel(
            name='AnnonceMarket',
            fields=[
                ('id_annonce', models.AutoField(primary_key=True, serialize=False)),
                ('titre', models.CharField(max_length=255)),
                ('contenu', models.TextField()),
                ('vu_par', models.IntegerField(default=0)),
                ('image_url', models.CharField(max_length=255)),
                ('marketplace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='annonces', to='BatiProApp.marketplace')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id_message', models.AutoField(primary_key=True, serialize=False)),
                ('contenu', models.TextField()),
                ('date_envoi', models.DateField(auto_now_add=True)),
                ('destinateur_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages_received', to=settings.AUTH_USER_MODEL)),
                ('expediteur_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages_sent', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'messages',
            },
        ),
        migrations.AddField(
            model_name='commande',
            name='panier',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='commande', to='BatiProApp.panier'),
        ),
        migrations.CreateModel(
            name='Produit',
            fields=[
                ('id_produit', models.AutoField(primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('prix', models.DecimalField(decimal_places=2, max_digits=10)),
                ('disponibilite_stock', models.IntegerField(default=0)),
                ('dimension', models.CharField(max_length=255)),
                ('poids', models.FloatField()),
                ('materiaux', models.CharField(max_length=255)),
                ('image_url', models.URLField()),
                ('categorie', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='produits', to='BatiProApp.categorie')),
                ('marketplace', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='produits', to='BatiProApp.marketplace')),
            ],
        ),
        migrations.CreateModel(
            name='PanierProduit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite', models.PositiveIntegerField()),
                ('panier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='produits', to='BatiProApp.panier')),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paniers', to='BatiProApp.produit')),
            ],
        ),
        migrations.CreateModel(
            name='Professional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('localisation', models.CharField(max_length=500)),
                ('description_experience', models.TextField()),
                ('status', models.CharField(default='en attente', max_length=50)),
                ('image_url', models.URLField(blank=True, max_length=500, null=True)),
                ('metiers', models.ManyToManyField(related_name='professionals', to='BatiProApp.metier')),
                ('client', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='professional', to='BatiProApp.client')),
            ],
            options={
                'db_table': 'Professionals',
            },
        ),
        migrations.CreateModel(
            name='Annonce',
            fields=[
                ('id_annonce', models.AutoField(primary_key=True, serialize=False)),
                ('titre', models.CharField(max_length=200)),
                ('contenu', models.TextField()),
                ('vu_par', models.IntegerField(default=0)),
                ('image_url', models.URLField(blank=True, max_length=500, null=True)),
                ('date_publication', models.DateTimeField(auto_now_add=True)),
                ('professionnel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='annonces', to='BatiProApp.professional')),
            ],
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('annoncemarket_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='BatiProApp.annoncemarket')),
                ('id_promotion', models.AutoField(primary_key=True, serialize=False)),
                ('pourcentage', models.IntegerField()),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField()),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='promotions', to='BatiProApp.produit')),
            ],
            options={
                'db_table': 'promotions',
            },
            bases=('BatiProApp.annoncemarket',),
        ),
        migrations.AddField(
            model_name='panier',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paniers', to='BatiProApp.client'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id_notification', models.AutoField(primary_key=True, serialize=False)),
                ('contenu', models.TextField()),
                ('date_recoi', models.DateField(auto_now_add=True)),
                ('id_receveur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='BatiProApp.client')),
            ],
            options={
                'db_table': 'notifications',
            },
        ),
        migrations.AddField(
            model_name='commande',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commandes', to='BatiProApp.client'),
        ),
        migrations.CreateModel(
            name='AvisProf',
            fields=[
                ('id_avis', models.AutoField(primary_key=True, serialize=False)),
                ('note', models.DecimalField(decimal_places=0, max_digits=1)),
                ('date_avis', models.DateField(auto_now_add=True)),
                ('commentaire', models.TextField(blank=True, null=True)),
                ('professionnel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avisProf', to='BatiProApp.professional')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avisClient', to='BatiProApp.client')),
            ],
            options={
                'db_table': 'avisProf',
            },
        ),
        migrations.CreateModel(
            name='AvisProduit',
            fields=[
                ('id_avis', models.AutoField(primary_key=True, serialize=False)),
                ('note', models.DecimalField(decimal_places=0, max_digits=1)),
                ('date_avis', models.DateField(auto_now_add=True)),
                ('commentaire', models.TextField(blank=True, null=True)),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avis', to='BatiProApp.produit')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avis_produit', to='BatiProApp.client')),
            ],
            options={
                'db_table': 'avis_produit',
            },
        ),
        migrations.AddField(
            model_name='marketowner',
            name='current_marketplace',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='BatiProApp.marketplace'),
        ),
        migrations.AddConstraint(
            model_name='produit',
            constraint=models.UniqueConstraint(fields=('nom', 'marketplace'), name='unique_product_in_marketplace'),
        ),
        migrations.AlterUniqueTogether(
            name='avisprof',
            unique_together={('professionnel', 'client')},
        ),
        migrations.AlterUniqueTogether(
            name='avisproduit',
            unique_together={('produit', 'client')},
        ),
    ]
